[{"/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/index.js":"1","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/reportWebVitals.js":"2","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/App.js":"3","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/StateProvider.js":"4","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/reducer.js":"5","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/Sidebar.js":"6","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/Login.js":"7","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/Chat.js":"8","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/SidebarChat.js":"9","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/firebase.js":"10"},{"size":689,"mtime":1619597324658,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1619597324658,"results":"13","hashOfConfig":"12"},{"size":685,"mtime":1619597324658,"results":"14","hashOfConfig":"12"},{"size":366,"mtime":1619597324658,"results":"15","hashOfConfig":"12"},{"size":380,"mtime":1619597324658,"results":"16","hashOfConfig":"12"},{"size":1942,"mtime":1619597324658,"results":"17","hashOfConfig":"12"},{"size":1020,"mtime":1619597324658,"results":"18","hashOfConfig":"12"},{"size":3447,"mtime":1619597324658,"results":"19","hashOfConfig":"12"},{"size":1423,"mtime":1619597324658,"results":"20","hashOfConfig":"12"},{"size":703,"mtime":1619597324658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mdrxld",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/index.js",[],"/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/reportWebVitals.js",[],"/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/App.js",["46","47"],"import React, { useState } from \"react\";\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const[{user}, dispatch] = useStateValue();\n  return (\n    // BEM naming convention\n    <div className=\"app\">\n\n{!user ? (\n  <Login/>\n):(< div className=\"app_body\">\n<Router>\n< Sidebar />\n  <Switch>\n\n    \n    <Route path=\"/rooms/:roomId\">\n      <Chat />\n    </Route>\n    <Route path=\"/\">\n      <Chat />\n    </Route>\n  </Switch>\n\n\n</Router>\n</div>)}\n      \n    </div>\n  );\n}\n\nexport default App;\n","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/StateProvider.js",[],"/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/reducer.js",[],"/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/Sidebar.js",["48","49"],"import React, { useEffect, useState } from 'react'\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { SearchOutlined, SignalCellular0Bar } from \"@material-ui/icons\";\nimport SidebarChat from \"./SidebarChat\"\nimport './Sidebar.css';\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\nfunction Sidebar() {\n    const [rooms, setRooms] = useState([]);\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(() => {\n\nconst unsubscribe= db.collection('rooms').onSnapshot(snapshot =>(\n    setRooms(snapshot.docs.map(doc => ({\n        id:doc.id,\n        data: doc.data(),\n    })))\n));\nreturn() =>{\n    unsubscribe();\n}\n    }, [])\n    return (\n        <div className=\"sidebar\">\n\n            <div className=\"sidebar_header\">\n                <Avatar src={user?.photoURL}/>\n                <div className=\"sidebar_headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        < MoreVertIcon />\n                    </IconButton>\n\n                </div>\n            </div>\n            <div className=\"sidebar_search\">\n                <div className=\"sidebar_searchContainer\">\n                <SearchOutlined />\n                <input placeholder=\"Search or start new chat\" type=\"text\" />\n                </div>\n            </div>\n            <div className=\"sidebar_chats\">\n                <SidebarChat addNewChat />\n               {rooms.map(room => (\n                 <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n               ))}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Sidebar\n","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/Login.js",["50"],"import { Button } from '@material-ui/core';\nimport React from 'react';\nimport './Login.css';\nimport {auth,provider} from './firebase';\nimport { actionTypes } from './reducer';\nimport { useStateValue } from './StateProvider';\n\nfunction Login() {\n    const [{},dispatch] = useStateValue();\n    const signIn = () => {\n        auth\n            .signInWithPopup(provider)\n            .then((result) => { dispatch({\n                type: actionTypes.SET_USER,\n                user: result.user,\n            })})\n            .catch((error) => alert(error.message));\n    }\n    return (\n        <div className=\"login\">\n           <div className=\"login_container\">\n               <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \n                <div className=\"login_text\">\n                    <h1>Sign in to Whatsapp</h1>\n                </div>\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\n           </div>\n        </div>\n    );\n}\n\nexport default Login","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/Chat.js",["51","52","53"],"import { Avatar, IconButton } from '@material-ui/core';\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons';\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./Chat.css\";\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\nimport firebase from \"firebase\";\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState('');\n    const {roomId} = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const[messages, setMessages] = useState([]);\n    const[{user}, dispatch] = useStateValue();\n\nuseEffect(() => {\nif(roomId){\n    db.collection('rooms').doc(roomId).onSnapshot((snapshot) => \n        setRoomName(snapshot.data().name\n    ))\n\n    db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => doc.data()))});\n}\n\n},[roomId])\n\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000))\n    }, [roomId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n\n        setInput(\"\");\n\n    }\n\n\n    return (\n        <div className='chat'>\n            < div className=\"chat_header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"chat_headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen {\" \"}\n                        {new Date(\n                            messages[messages.length - 1]?.\n                            timestamp?.toDate()\n                        ).toUTCString()}</p>\n                </div>\n\n                < div className=\"chat_headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"chat_body\">\n                {messages.map((message)=>(\n                     <p className={`chat_message ${message.name === user.displayName && 'chat_reciever'}`}>\n                    \n                     <span className=\"chat_name\" >{message.name}</span> \n                     {message.message}\n   \n                     <span className=\"chat_timestamp\">\n                         {new Date(message.timestamp?.toDate()).toUTCString()}\n                     </span>\n                       </p>\n\n                ))}\n               \n            </div>\n            <div className=\"chat_footer\">\n                <InsertEmoticonIcon />\n                <form>\n                <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\n                <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/SidebarChat.js",[],"/home/bloodryne/whatsapp-clone-using-firebase/whatsapp/src/firebase.js",[],{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":10,"column":17,"nodeType":"56","messageId":"57","endLine":10,"endColumn":25},{"ruleId":"54","severity":1,"message":"59","line":6,"column":26,"nodeType":"56","messageId":"57","endLine":6,"endColumn":44},{"ruleId":"54","severity":1,"message":"58","line":13,"column":20,"nodeType":"56","messageId":"57","endLine":13,"endColumn":28},{"ruleId":"60","severity":1,"message":"61","line":9,"column":12,"nodeType":"62","messageId":"63","endLine":9,"endColumn":14},{"ruleId":"54","severity":1,"message":"64","line":2,"column":22,"nodeType":"56","messageId":"57","endLine":2,"endColumn":36},{"ruleId":"54","severity":1,"message":"58","line":18,"column":19,"nodeType":"56","messageId":"57","endLine":18,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":58,"column":58,"nodeType":"67","messageId":"68","endLine":58,"endColumn":60,"fix":"69"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'SignalCellular0Bar' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'InsertEmoticon' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"70","text":"71"},[1910,1941],"\n                            ?."]